?solve
as.matrix(1:4, 2, 2)
as.matrix(1:4, 2, 2)
a <- matrix(c(2,4,8,3), nrow=2, ncol=2)
a
solve(a)
matrix()
solve(matrix())
source('makeVector.R')
makeVector <- function(x=numeric()) {
m <- NULL
# set the value of the vector
set <- function(y) {
x <<- y
m <<- NULL
}
# get the value of the vector
get <- function(){
x
}
# set the value of the mean
setmean <- function(mean){
m <<- mean
}
# get the value of the mean
getmean <- function(){
m
}
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x <- makeVector(c(1,2,3,4))
x
x$get()
x$getmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x)
x$getmean()
cachemean(c(1,2,3,4))
a <- c(1,2,3,4)
cachemean(a)
a <- makevector(c(2,3,4,5))
a <- makeVector(c(2,3,4,5))
cachemean(a)
cachemean(a)
cachemean(x)
x
x$set(c(4,4,5))
x
x$get()
?inv
x
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(12,3,4,56), nrow=2, ncol=2))
x$get()
cacheSolve(x)
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(12,3,4,56), nrow=2, ncol=2))
cacheSolve(x)
x$getinv()
cacheSolve(X)
cacheSolve(x)
